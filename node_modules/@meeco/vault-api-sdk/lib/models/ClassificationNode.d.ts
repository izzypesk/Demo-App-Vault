/**
 * Vault
 * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault
 *
 * The version of the OpenAPI document: 11.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * ClassificationNode instances are used to define tree structures where each node in the tree is a ClassificationNode.
 *  Such ClassificationScheme trees are constructed with ClassificationNode instances under a ClassificationScheme instance, and are used to define Classification schemes or ontologies.
 * @export
 * @interface ClassificationNode
 */
export interface ClassificationNode {
    /**
     *
     * @type {string}
     * @memberof ClassificationNode
     */
    id: string;
    /**
     * Machine-readable string.
     * @type {string}
     * @memberof ClassificationNode
     */
    name: string;
    /**
     * String for display.
     * @type {string}
     * @memberof ClassificationNode
     */
    label: string;
    /**
     *
     * @type {string}
     * @memberof ClassificationNode
     */
    description: string | null;
    /**
     * Determines position in collection.
     * @type {number}
     * @memberof ClassificationNode
     */
    ordinal: number;
    /**
     *
     * @type {string}
     * @memberof ClassificationNode
     */
    background_color: string | null;
    /**
     *
     * @type {string}
     * @memberof ClassificationNode
     */
    image: string | null;
    /**
     *
     * @type {string}
     * @memberof ClassificationNode
     */
    scheme: string | null;
}
export declare function ClassificationNodeFromJSON(json: any): ClassificationNode;
export declare function ClassificationNodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClassificationNode;
export declare function ClassificationNodeToJSON(value?: ClassificationNode | null): any;
