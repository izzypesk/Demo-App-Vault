/**
 * Vault
 * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault
 *
 * The version of the OpenAPI document: 11.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * The format in which ItemTemplates are returned when you enter the card creation flow
 * @export
 * @interface ItemTemplateWithoutAssociations
 */
export interface ItemTemplateWithoutAssociations {
    /**
     *
     * @type {string}
     * @memberof ItemTemplateWithoutAssociations
     */
    id: string;
    /**
     * Machine-readable string.
     * @type {string}
     * @memberof ItemTemplateWithoutAssociations
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof ItemTemplateWithoutAssociations
     */
    description: string;
    /**
     * Determines position in collection.
     * @type {number}
     * @memberof ItemTemplateWithoutAssociations
     */
    ordinal: number;
    /**
     *
     * @type {boolean}
     * @memberof ItemTemplateWithoutAssociations
     */
    visible: boolean;
    /**
     *
     * @type {string}
     * @memberof ItemTemplateWithoutAssociations
     */
    user_id: string | null;
    /**
     *
     * @type {Date}
     * @memberof ItemTemplateWithoutAssociations
     */
    updated_at: Date;
    /**
     *
     * @type {string}
     * @memberof ItemTemplateWithoutAssociations
     */
    image: string | null;
    /**
     *
     * @type {string}
     * @memberof ItemTemplateWithoutAssociations
     */
    template_type: string | null;
    /**
     *
     * @type {Array<string>}
     * @memberof ItemTemplateWithoutAssociations
     */
    classification_node_ids: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof ItemTemplateWithoutAssociations
     */
    slot_ids: Array<string>;
    /**
     * String for display.
     * @type {string}
     * @memberof ItemTemplateWithoutAssociations
     */
    label: string;
    /**
     *
     * @type {string}
     * @memberof ItemTemplateWithoutAssociations
     */
    background_color: string | null;
}
export declare function ItemTemplateWithoutAssociationsFromJSON(json: any): ItemTemplateWithoutAssociations;
export declare function ItemTemplateWithoutAssociationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemTemplateWithoutAssociations;
export declare function ItemTemplateWithoutAssociationsToJSON(value?: ItemTemplateWithoutAssociations | null): any;
