/**
 * Vault
 * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault
 *
 * The version of the OpenAPI document: 11.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { AdmissionTokenResponse } from '../models';
export interface AdmissionTokensTokenValueGetRequest {
    tokenValue: string;
}
/**
 *
 */
export declare class AdmissionTokenApi extends runtime.BaseAPI {
    /**
     * Creates a one-time admission token for account creation in the database, and returns the token to the user. Besides its `id`, it is initialized with a unique `token_value` string and a boolean `used` field with the default value `false`.
     * Creates an admission token
     */
    admissionTokensPostRaw(): Promise<runtime.ApiResponse<AdmissionTokenResponse>>;
    /**
     * Creates a one-time admission token for account creation in the database, and returns the token to the user. Besides its `id`, it is initialized with a unique `token_value` string and a boolean `used` field with the default value `false`.
     * Creates an admission token
     */
    admissionTokensPost(): Promise<AdmissionTokenResponse>;
    /**
     * Searches for an admission token record by its `token_value` field and returns  all the token\'s fields to the user.
     * Returns an admission token
     */
    admissionTokensTokenValueGetRaw(requestParameters: AdmissionTokensTokenValueGetRequest): Promise<runtime.ApiResponse<AdmissionTokenResponse>>;
    /**
     * Searches for an admission token record by its `token_value` field and returns  all the token\'s fields to the user.
     * Returns an admission token
     */
    admissionTokensTokenValueGet(tokenValue: string): Promise<AdmissionTokenResponse>;
}
