/**
 * Vault
 * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault
 *
 * The version of the OpenAPI document: 11.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ClassificationNodesResponse, InlineObject, InlineResponse201 } from '../models';
export interface ClassificationNodesGetRequest {
    nextPageAfter?: string;
    perPage?: number;
    schemeName?: string;
    name?: string;
}
export interface ClassificationNodesIdGetRequest {
    id: string;
}
export interface ClassificationNodesPostRequest {
    classificationNodeParams: InlineObject;
}
/**
 *
 */
export declare class ClassificationNodeApi extends runtime.BaseAPI {
    /**
     * Fetches classification nodes. Can fetch classification nodes belonging toa certain scheme. Can filter classification nodes by a LIKE expression on the nameFetches global nodes and nodes created by the current user excluding classification nodescreated by other users.
     * Returns a list of classification nodes
     */
    classificationNodesGetRaw(requestParameters: ClassificationNodesGetRequest): Promise<runtime.ApiResponse<ClassificationNodesResponse>>;
    /**
     * Fetches classification nodes. Can fetch classification nodes belonging toa certain scheme. Can filter classification nodes by a LIKE expression on the nameFetches global nodes and nodes created by the current user excluding classification nodescreated by other users.
     * Returns a list of classification nodes
     */
    classificationNodesGet(nextPageAfter?: string, perPage?: number, schemeName?: string, name?: string): Promise<ClassificationNodesResponse>;
    /**
     * Retrieve a ClassificationNode record specified by `id`.
     * Returns classification node
     */
    classificationNodesIdGetRaw(requestParameters: ClassificationNodesIdGetRequest): Promise<runtime.ApiResponse<InlineResponse201>>;
    /**
     * Retrieve a ClassificationNode record specified by `id`.
     * Returns classification node
     */
    classificationNodesIdGet(id: string): Promise<InlineResponse201>;
    /**
     * Returns created classification node
     */
    classificationNodesPostRaw(requestParameters: ClassificationNodesPostRequest): Promise<runtime.ApiResponse<InlineResponse201>>;
    /**
     * Returns created classification node
     */
    classificationNodesPost(classificationNodeParams: InlineObject): Promise<InlineResponse201>;
}
