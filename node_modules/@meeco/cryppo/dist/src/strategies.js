"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.strategyToAlgorithm = exports.CipherStrategy = void 0;
var CipherStrategy;
(function (CipherStrategy) {
    CipherStrategy["AES_ECB"] = "AES-ECB";
    CipherStrategy["AES_CBC"] = "AES-CBC";
    CipherStrategy["AES_CFB"] = "AES-CFB";
    CipherStrategy["AES_OFB"] = "AES-OFB";
    CipherStrategy["AES_CTR"] = "AES-CTR";
    CipherStrategy["AES_GCM"] = "AES-GCM";
    CipherStrategy["DES_ECB"] = "DES-ECB";
    CipherStrategy["DES_CBC"] = "DES-CBC";
    // Not currently suppoted as they have different key size (256 not supported)
    // THREE_DES_ECB = '3DES-ECB',
    // THREE_DES_CBC = '3DES-CBC',
})(CipherStrategy = exports.CipherStrategy || (exports.CipherStrategy = {}));
/*
 * Convert an algorithm from a serialized payload (e.g Aes256Gcm.data.artifacts) in the ruby lib's naming
 * scheme to one that can be used by forge
 */
exports.strategyToAlgorithm = function (algorithm) {
    return algorithm
        .split(/[0-9]+/)
        .map(function (v) { return v.toUpperCase(); })
        .join('-');
};
