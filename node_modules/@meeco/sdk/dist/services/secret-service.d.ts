/// <reference types="node" />
/**
 * Used for dealing with Meeco secrets - used for user authentication and login
 */
export declare class SecretService {
    private readonly derivationConstants;
    /**
     * Pluck the SRP Username from a users' secret
     */
    usernameFromSecret(secret: string): string;
    /**
     * Given a user's Secret and Passphrase - derive the Passphrase Derived Key (used to decrypt their Key Encryption Key)
     */
    derivePDKFromSecret(userEnteredPassword: string, secret: string): Promise<string>;
    srpPasswordFromSecret(userEnteredPassword: string, secret: string): Promise<string>;
    /**
     * Generate a new user Secret from the provided username.
     * Usernames can be requested via the {@link UserService}
     */
    generateSecret(username: string): Promise<string>;
    /**
     * Public for testing purposes only.
     *
     * @ignore
     */
    encodeBase58(val: string | Buffer): any;
    /**
     * Separate out a user's secret into its component parts
     */
    private destructureSecret;
    private deriveSRPPasswordFromSecretKey;
    private derivePDK;
}
